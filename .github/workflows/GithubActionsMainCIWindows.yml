name: GithubActionsMainCIWindows

on:
  push:
    branches: [ main-xxx ]

  pull_request:
    branches: [ main-xxx ]

env:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  output: ${{ github.workspace }}\_site
  project: 'BlazorMdcWebsite.WebAssembly\BlazorMdcWebsite.WebAssembly.csproj'

jobs:

  build:
    runs-on: windows-latest
    steps:

    - name: Get the branch
      id: get_branch
      run: echo ::set-output name=branch::${GITHUB_REF/refs\/heads\//}
      shell: bash

    - name: Get the pullrequest
      id: get_pullrequest
      run: echo ::set-output name=pullrequest::${GITHUB_REF/refs\/pull\//}
      shell: bash

    - name: Get the tag
      id: get_tag
      run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
      shell: bash

    - name: Show branch name Ꙫ
      run: echo "GitHub indicates that this is a branch push request of ${{steps.get_branch.outputs.branch}}"
      if: contains(github.ref, 'refs/heads')

    - name: Show PR name Ꙫ
      run: echo "GitHub indicates that this is a pull request called ${{steps.get_pullrequest.outputs.pullrequest}}"
      if: contains(github.ref, 'refs/pull')

    - name: Show Tag name Ꙫ
      run: echo "GitHub indicates that this is a tag creation with ${{steps.get_tag.outputs.tag}}"
      if: contains(github.ref, 'refs/tag')


    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2


    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100-preview.7.20366.6

    - name: Build 🔧
      run: dotnet build --configuration ${env:buildConfiguration} ${env:project}

    - name: Publish 🔧
      run: dotnet publish --no-build --configuration ${env:buildConfiguration} --output ${env:output} ${env:project}

    - name: Base Href Rewrite 👉
      uses: SteveSandersonMS/ghaction-rewrite-base-href@v1
      with:
        html_path: '_site/wwwroot/index.html'
        base_href: '/BlazorMdcWebsite/'

    - name: Upload Artifacts 🔺 # The project is then uploaded as an artifact named 'site'.
      uses: actions/upload-artifact@v1
      with:
        name: site
        path: _site

  deployghpages:
    needs: [build] # The second job must depend on the first one to complete before running, and uses ubuntu-latest instead of windows.
    runs-on: ubuntu-latest
    steps:

    - name: Checkout 🛎️
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Download Artifacts 🔻 # The built project is downloaded into the 'site' folder.
      uses: actions/download-artifact@v1
      with:
        name: site

    - name: Deploy 🚀
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        ACCESS_TOKEN: ${{ secrets.GH_PAT }}
        BRANCH: gh-pages
        FOLDER: "site/wwwroot"
      if: (contains(github.ref, 'refs/heads') && (github.repository != 'BlazorMdc/BlazorMdcWebsite'))
